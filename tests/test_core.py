import pandas as pd
import vstatistic as vs

data = pd.read_csv('returns.csv', index_col='Date', parse_dates=True)
prices = data.Close
print(prices)
print("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")

print("compsum: ", vs.core.compsum(prices))
print("comp: ", vs.core.comp(prices))
print("expected_return: ", vs.core.expected_return(prices))
print("geometric_mean: ", vs.core.geometric_mean(prices))
print("ghpr: ", vs.core.ghpr(prices))
print("outliers: ", vs.core.outliers(prices))
print("remove_outliers: ", vs.core.remove_outliers(prices))
print("best: ", vs.core.best(prices))
print("worst: ", vs.core.worst(prices))
print("consecutive_wins: ", vs.core.consecutive_wins(prices))
print("consecutive_losses: ", vs.core.consecutive_losses(prices))
print("exposure: ", vs.core.exposure(prices))
print("win_rate: ", vs.core.win_rate(prices))
print("avg_return: ", vs.core.avg_return(prices))
print("avg_win: ", vs.core.avg_win(prices))
print("avg_loss: ", vs.core.avg_loss(prices))
print("volatility: ", vs.core.volatility(prices))
print("rolling_volatility: ", vs.core.rolling_volatility(prices))
print("implied_volatility: ", vs.core.implied_volatility(prices))
print("sharpe: ", vs.core.sharpe(prices))
print("smart_sharpe: ", vs.core.smart_sharpe(prices))
print("rolling_sharpe: ", vs.core.rolling_sharpe(prices))
print("sortino: ", vs.core.sortino(prices))
print("smart_sortino: ", vs.core.smart_sortino(prices))
print("rolling_sortino: ", vs.core.rolling_sortino(prices))
print("adjusted_sortino: ", vs.core.adjusted_sortino(prices))
print("omega: ", vs.core.omega(prices))
print("cagr: ", vs.core.cagr(prices))
print("rar: ", vs.core.rar(prices))
print("skew: ", vs.core.skew(prices))
print("kurtosis: ", vs.core.kurtosis(prices))
print("calmar: ", vs.core.calmar(prices))
print("ulcer_index: ", vs.core.ulcer_index(prices))
print("ulcer_performance_index: ", vs.core.ulcer_performance_index(prices))
print("upi: ", vs.core.upi(prices))
print("serenity_index: ", vs.core.serenity_index(prices))
print("risk_of_ruin: ", vs.core.risk_of_ruin(prices))
print("ror: ", vs.core.ror(prices))
print("value_at_risk: ", vs.core.value_at_risk(prices))
print("var: ", vs.core.var(prices))
print("conditional_value_at_risk: ", vs.core.conditional_value_at_risk(prices))
print("cvar: ", vs.core.cvar(prices))
print("expected_shortfall: ", vs.core.expected_shortfall(prices))
print("tail_ratio: ", vs.core.tail_ratio(prices))
print("payoff_ratio: ", vs.core.payoff_ratio(prices))
print("win_loss_ratio: ", vs.core.win_loss_ratio(prices))
print("profit_ratio: ", vs.core.profit_ratio(prices))
print("profit_factor: ", vs.core.profit_factor(prices))
print("gain_to_pain_ratio: ", vs.core.gain_to_pain_ratio(prices))
print("cpc_index: ", vs.core.cpc_index(prices))
print("common_sense_ratio: ", vs.core.common_sense_ratio(prices))
print("outlier_win_ratio: ", vs.core.outlier_win_ratio(prices))
print("outlier_loss_ratio: ", vs.core.outlier_loss_ratio(prices))
print("recovery_factor: ", vs.core.recovery_factor(prices))
print("risk_return_ratio: ", vs.core.risk_return_ratio(prices))
print("max_drawdown: ", vs.core.max_drawdown(prices))
print("to_drawdown_series: ", vs.core.to_drawdown_series(prices))
print("drawdown_details: ", vs.core.drawdown_details(prices))
print("kelly_criterion: ", vs.core.kelly_criterion(prices))
print("pct_rank: ", vs.core.pct_rank(prices, 3))
print("probabilistic_sharpe_ratio: ", vs.core.probabilistic_sharpe_ratio(prices))
print("probabilistic_sortino_ratio: ", vs.core.probabilistic_sortino_ratio(prices))
print(
    "probabilistic_adjusted_sortino_ratio: ",
    vs.core.probabilistic_adjusted_sortino_ratio(prices)
)
